{
  "name": "Libraries",
  "tagline": "",
  "body": "### Introduction\r\nThere are:\r\n* static libraries (*.a)\r\n* shared libraries (*.so)\r\n\r\nA static library is essentialy a set of object files.\r\n\r\n### How to create an object file?\r\n```c++\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint foo()\r\n{\r\n  cout << \"I'm foo()\" << endl;\r\n}\r\n```\r\n```\r\ng++ -c tools.cpp\r\n```\r\nResult: `tools.o`\r\n\r\n### How to create a static library?\r\n```\r\nar -cq libtools.a tools.o\r\n```\r\n\r\nAnd check the results (list the content of a specified archive):\r\n```\r\n$ ar -t libtools.a\r\ntools.o\r\n```\r\n\r\n### How to use a library?\r\n```c++\r\n#include <iostream>\r\n#include \"tools.h\"\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n  cout << \"I'm calling foo()...\" << endl;\r\n  foo();\r\n  cout << \"I'm back!\" << endl;\r\n}\r\n```\r\n```\r\ng++ -L . main.cpp -ltools\r\n```\r\nIt's important to type `-ltools` option after `main.cpp`.\r\n[Here's why.](http://stackoverflow.com/questions/7783345/library-is-linked-but-reference-is-undefined)\r\n\r\nIt's worth noting that a naming convention is used here. **lib**tools**.a**\r\n\r\n### How to find all static libraries in your system?\r\n```\r\nfind / -name 'lib*ssl*.a' 2>/dev/null | tr '\\n' ' '\r\n```\r\n\r\n### Sources\r\n1. [Wikipedia - Linker](https://en.wikipedia.org/wiki/Linker_%28computing%29)\r\n2. [Static, Shared Dynamic and Loadable Linux Libraries](http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html)\r\n3. [How to create a static library with g++?](http://stackoverflow.com/questions/5947067/how-to-create-a-static-library-with-g)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}